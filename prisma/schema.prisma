generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Escapade {
  id                     Int           @id(map: "Escapade_pkey") @default(autoincrement())
  titre                  String        @db.VarChar(100)
  description            String
  description_principale String
  votre_escapade         String
  info_pratique          String
  region                 String        @db.VarChar(100)
  duree                  Int
  prix                   Float
  favori                 Favori[]
  photo                  Photo[]
  reservation            Reservation[]
  thematiques            EscapadeThematique[]
}

model Favori {
  id            Int         @id(map: "Favori_pkey") @default(autoincrement())
  utilisateurId Int
  escapadeId    Int
  escapade      Escapade    @relation(fields: [escapadeId], references: [id], map: "Favori_escapadeId_fkey")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id], map: "Favori_utilisateurId_fkey")
}

model Paiement {
  id            Int         @id(map: "Paiement_pkey") @default(autoincrement())
  reservationId Int
  montant       Float
  date          DateTime
  reservation   Reservation @relation(fields: [reservationId], references: [id], map: "Paiement_reservationId_fkey")
}

model Photo {
  id          Int      @id(map: "Photo_pkey") @default(autoincrement())
  url_photo   String
  description String
  id_escapade Int
  escapade    Escapade @relation(fields: [id_escapade], references: [id], map: "Photo_id_escapade_fkey")
}

model Reservation {
  id            Int         @id(map: "Reservation_pkey") @default(autoincrement())
  utilisateurId Int
  escapadeId    Int
  date          DateTime
  paiement      Paiement[]
  escapade      Escapade    @relation(fields: [escapadeId], references: [id], map: "Reservation_escapadeId_fkey")
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id], map: "Reservation_utilisateurId_fkey")
}

model Utilisateur {
  id               Int           @id(map: "Utilisateur_pkey") @default(autoincrement())
  nom              String
  prenom           String
  email            String        @unique(map: "Utilisateur_email_key")
  mot_de_passe     String
  date_de_creation DateTime      @default(now())
  favori           Favori[]
  reservation      Reservation[]
}

model Thematique {
  id    Int    @id(map: "Thematique_pkey") @default(autoincrement())
  nom   String @db.VarChar(100)
  escapades EscapadeThematique[]
}

model EscapadeThematique {
  escapadeId   Int
  thematiqueId Int
  escapade     Escapade   @relation(fields: [escapadeId], references: [id], map: "EscapadeThematique_escapadeId_fkey")
  thematique   Thematique @relation(fields: [thematiqueId], references: [id], map: "EscapadeThematique_thematiqueId_fkey")
  @@id([escapadeId, thematiqueId])
}
